<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BorderMapper">
	<resultMap type="Border" id="BorderMap">
		<id property="boardKey" column="B_KEY"/>
		<result property="companyKey" column="C_KEY_FK"/>
		<result property="bTitle" column="B_TITLE"/>
		<result property="bContent" column="B_CONTENT"/>
		<result property="bWriter" column="B_WRITER_FK"/>
		<result property="bCount" column="B_COUNT"/>
		<result property="bDate" column="B_DATE"/>
		<result property="bCateGory" column="B_CATEGORY"/>
		<result property="eName" column="E_NAME"/>
		<result property="startRow" column="startRow"/>
		<result property="endRow" column="endRow"/>
		<result property="ePhoto" column="E_PHOTO"/>
	</resultMap>
	
	<resultMap type="Comment" id="CommentMap">
		<id property="commentKey" column="CO_KEY"/>
		<result property="boardKeyFk" column="B_KEY_FK"/>
		<result property="cWriter" column="CO_WRITER_FK"/>
		<result property="cContent" column="CO_CONTENT"/>
		<result property="cDate" column="CO_DATE"/>
		<association property="user" javaType="EmployeeVo">
			<id property="eKey" column="E_KEY" />
			<result property="eName" column="E_NAME" />
			<result property="ePhoto" column="E_PHOTO" />
		</association>
	</resultMap>
	
	<resultMap type="AttachVo" id="AttachMap">
		<id property="attachKey" column="ATTA_KEY"/>
		<result property="attachLocation" column="ATTA_LOCATION"/>
		<result property="attachFileName" column="ATTA_FILENAME"/>
		<result property="attachFilePath" column="ATTA_FILEPATH"/>
	</resultMap>
	
	<select id="BorderListSelect" parameterType="Border" resultMap="BorderMap">
		SELECT b.B_KEY, b.B_TITLE, b.C_KEY_FK, b.B_CONTENT, b.B_COUNT, b.B_DATE, b.B_CATEGORY ,e.E_NAME, b.B_WRITER_FK 
		FROM BOARD b 
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = #{bCateGory}
	</select>
	
	<insert id="WriteBoard" parameterType="Border">
		INSERT INTO BOARD VALUES (SEQ_BOARD.NEXTVAL, #{companyKey}, #{bTitle}, #{bContent}, #{bWriter}, 0, SYSDATE, #{bCateGory})
	</insert>
	
	<select id="BorderSelect" parameterType="int" resultMap="BorderMap">
		SELECT b.B_KEY, b.B_TITLE, b.C_KEY_FK, b.B_CONTENT, b.B_COUNT, b.B_DATE, b.B_CATEGORY ,e.E_NAME, b.B_WRITER_FK ,e.E_PHOTO
		FROM BOARD b 
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE b.B_KEY = #{boardKey}
	</select>
	
	<update id="BorderUpdate" parameterType="Border">
		UPDATE BOARD 
		SET B_TITLE =#{bTitle}, B_CONTENT =#{bContent}
		WHERE B_KEY = #{boardKey}
	</update>
	
	<select id="selectBoardTotalCount" parameterType="string" resultType="int">
		SELECT COUNT(*) AS LISTCOUNT
		FROM BOARD
		WHERE B_CATEGORY = #{bCateGory}
	</select>
	
	<select id="BorderSelectList" parameterType="Border" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM ( SELECT ROWNUM RNUM, P.*
		FROM ( SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b 
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = #{bCateGory}
		ORDER BY b.B_KEY DESC) P)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<update id="BorderCountUpdate">
		UPDATE BOARD
		SET B_COUNT = B_COUNT + 1
		WHERE B_KEY = #{boardKey}
	</update>
	
	<select id="selectCommentList" parameterType="int" resultMap="CommentMap">
		SELECT CO_KEY, B_KEY_FK, CO_WRITER_FK, CO_CONTENT, CO_DATE, E_NAME, B_KEY, e.E_PHOTO
		FROM BOARD_COMMENT c
		JOIN BOARD b on (c.B_KEY_FK = b.B_KEY)
		JOIN EMPLOYEE e on (c.CO_WRITER_FK = e.E_KEY)
		WHERE B_KEY = #{boardKey}
	</select>
	
	<insert id="BorderComment">
		INSERT INTO BOARD_COMMENT VALUES(SEQ_COMMENT.NEXTVAL, #{boardKeyFk}, #{cWriter}, #{cContent}, SYSDATE)
	</insert>
	
	<delete id="DeleteBoard">
		DELETE FROM BOARD WHERE B_KEY = #{boardKey}
	</delete>
	
	<update id="updateComment">
		UPDATE BOARD_COMMENT
		SET CO_CONTENT = #{cContent} 
		WHERE CO_KEY = #{commentKey}
	</update>
	
	<delete id="deleteComment">
		DELETE FROM BOARD_COMMENT WHERE CO_KEY = #{commentKey}
	</delete>
	
	<select id="selectBoardOne" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 1
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	
	<select id="selectBoardTwo" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 2
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	
	<select id="selectBoardThr" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 3
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	
	<select id="selectBoardOneEmp" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 1
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 5
	</select>
	
	<select id="selectBoardTwoEmp" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 2
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 5
	</select>
	
	<select id="selectBoardThrEmp" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 3
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 5
	</select>
	
	<select id="BorderGalleryForm" parameterType="AttachVo" resultMap="AttachMap">
		SELECT ATTA_KEY, ATTA_LOCATION, ATTA_FILENAME, ATTA_FILEPATH FROM ATTACHMENT A
		JOIN BOARD B ON (A.ATTA_LOCATION = B.B_KEY)
	</select>
	
	<insert id="insertBoard">
		INSERT INTO BOARD VALUES (SEQ_BOARD.NEXTVAL, #{companyKey}, #{bTitle}, #{bContent}, #{bWriter}, 0, SYSDATE, 4)
		<selectKey keyProperty="boardKey" resultType="Integer" order="AFTER">
				 SELECT SEQ_BOARD.CURRVAL FROM DUAL 
		</selectKey>
	</insert>
	
	<select id="selectBoardFor" resultMap="BorderMap">
		SELECT B_KEY, C_KEY_FK, B_TITLE, B_WRITER_FK, B_COUNT, B_DATE, B_CATEGORY, E_NAME
		FROM 
		(SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 4
		ORDER BY B_DATE DESC)
		WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	
	<select id="listsearch" parameterType="hashmap" resultMap="BorderMap">
		SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = #{getbCateGory}
		<include refid="search"></include>
		ORDER BY B_KEY DESC, B_DATE DESC
	</select>
	
	<select id="listsearchcount" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) FROM BOARD
		WHERE B_CATEGORY = #{getbCateGory}
		<include refid="search"></include>
	</select>
	
	<select id="searchEmp" parameterType="hashmap" resultMap="BorderMap">
		SELECT b.B_KEY, b.C_KEY_FK, b.B_TITLE, b.B_CONTENT, b.B_WRITER_FK, b.B_COUNT, b.B_DATE, b.B_CATEGORY, e.E_NAME
		FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 1 AND e.E_NAME = '관리자'
	</select>
	
	<select id="Empsearchcount" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) FROM BOARD b
		JOIN EMPLOYEE e on (b.B_WRITER_FK = e.E_KEY)
		WHERE B_CATEGORY = 1 AND e.E_NAME = '관리자'
	</select>
	
	<sql id="search">
		<choose>
			<when test="condition == 'all'">
				AND B_TITLE like '%' || #{keyword} || '%'
				OR B_CONTENT like '%' || #{keyword} || '%'
			</when>
			<when test="condition == '1'">
				AND B_TITLE like '%' || #{keyword} || '%'
			</when>
			<when test="condition == '2'">
				AND B_CONTENT like '%' || #{keyword} || '%'
			</when>
			<otherwise>
				AND  B_TITLE like '%' || #{keyword} || '%'
			</otherwise>
		</choose>
	</sql>
</mapper>