--DROP쿼리
DROP TABLE APPROVAL CASCADE CONSTRAINTS;
DROP TABLE APPROVAL_CONDITION CASCADE CONSTRAINTS;
DROP TABLE ATTACHMENT CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE BOARD_COMMENT CASCADE CONSTRAINTS;
DROP TABLE CALENDER CASCADE CONSTRAINTS;
DROP TABLE COMMUTE CASCADE CONSTRAINTS;
DROP TABLE COMPANY CASCADE CONSTRAINTS;
DROP TABLE DIVISION CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE GIVEVACATION CASCADE CONSTRAINTS;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;
DROP TABLE PRICE CASCADE CONSTRAINTS;
DROP TABLE QNA CASCADE CONSTRAINTS;
DROP TABLE RECEIVENOTE CASCADE CONSTRAINTS;
DROP TABLE REPORT CASCADE CONSTRAINTS;
DROP TABLE SENDNOTE CASCADE CONSTRAINTS;
DROP TABLE VACATION CASCADE CONSTRAINTS;
DROP TABLE ORDERTABLE CASCADE CONSTRAINTS;
DROP TABLE ORDERTABLELINKED CASCADE CONSTRAINTS;
DROP TABLE SPENDING_RESOLUTION CASCADE CONSTRAINTS;
DROP TABLE VACATION_FORM CASCADE CONSTRAINTS;
DROP TABLE JOB_PROPSAL CASCADE CONSTRAINTS;

DROP SEQUENCE SEQ_COMPANY;
DROP SEQUENCE SEQ_DIVISION;
DROP SEQUENCE SEQ_EMPLOYEE;
DROP SEQUENCE SEQ_REPORT;
DROP SEQUENCE SEQ_QNA;
DROP SEQUENCE SEQ_PAYMENT;
DROP SEQUENCE SEQ_PRICE;
DROP SEQUENCE SEQ_BOARD;
DROP SEQUENCE SEQ_COMMENT;
DROP SEQUENCE SEQ_CALENDER;
DROP SEQUENCE SEQ_COMMUTE;
DROP SEQUENCE SEQ_VACATION;
DROP SEQUENCE SEQ_GIVEVACATION;
DROP SEQUENCE SEQ_APPROVAL;
DROP SEQUENCE SEQ_APPROVAL_CONDITION;
DROP SEQUENCE SEQ_ATTACHMENT;
DROP SEQUENCE SEQ_SENDNOTE;
DROP SEQUENCE SEQ_RECEIVENOTE;
DROP SEQUENCE SEQ_ORDERTABLE;
DROP SEQUENCE SEQ_ORDERTABLELINKED;
DROP SEQUENCE SEQ_SPENDING_RESOLUTION;
DROP SEQUENCE SEQ_VACATION_FORM;
DROP SEQUENCE SEQ_JOB_PROPSAL;

--SEQUENCE
CREATE SEQUENCE SEQ_COMPANY;
CREATE SEQUENCE SEQ_DIVISION;
CREATE SEQUENCE SEQ_EMPLOYEE;
CREATE SEQUENCE SEQ_REPORT;
CREATE SEQUENCE SEQ_QNA;
CREATE SEQUENCE SEQ_PAYMENT;
CREATE SEQUENCE SEQ_PRICE;
CREATE SEQUENCE SEQ_BOARD;
CREATE SEQUENCE SEQ_COMMENT;
CREATE SEQUENCE SEQ_CALENDER;
CREATE SEQUENCE SEQ_COMMUTE;
CREATE SEQUENCE SEQ_VACATION;
CREATE SEQUENCE SEQ_GIVEVACATION;
CREATE SEQUENCE SEQ_APPROVAL;
CREATE SEQUENCE SEQ_APPROVAL_CONDITION;
CREATE SEQUENCE SEQ_ATTACHMENT;
CREATE SEQUENCE SEQ_SENDNOTE;
CREATE SEQUENCE SEQ_RECEIVENOTE;
CREATE SEQUENCE SEQ_ORDERTABLE;
CREATE SEQUENCE SEQ_ORDERTABLELINKED;
CREATE SEQUENCE SEQ_SPENDING_RESOLUTION;
CREATE SEQUENCE SEQ_VACATION_FORM;
CREATE SEQUENCE SEQ_JOB_PROPSAL;

---------------------------------------------------------------------
--좌표 테이블
CREATE TABLE COORDINATE(
COORD_KEY NUMBER PRIMARY KEY,
CITY VARCHAR2(300),
LAT VARCHAR2(300),
LNG VARCHAR2(300)
);
--지역좌표테이블 코멘트
COMMENT ON TABLE COORDINATE IS '좌표 테이블입니다';
COMMENT ON COLUMN COORDINATE.COORD_KEY IS '좌표 기본키';
COMMENT ON COLUMN COORDINATE.LAT IS '위도';
COMMENT ON COLUMN COORDINATE.LNG IS '경도';
---------------------------------------------------------------------유큰별
--회사테이블
CREATE TABLE COMPANY(
 C_KEY NUMBER PRIMARY KEY,
 C_NAME VARCHAR2(300 BYTE),
 C_OWNER VARCHAR2(300 BYTE),
 C_ADDRESS VARCHAR2(300 BYTE),
 C_LOGO VARCHAR2(300 BYTE),
 C_SIGN VARCHAR2(300 BYTE),
 C_QRCODE VARCHAR2(300 BYTE),
 C_MILEAGE VARCHAR2(300 BYTE),
 C_CLOSEDAY DATE,
 C_LEVEL NUMBER,
 COORD_KEY_FK NUMBER
);
--회사테이블 코멘트
COMMENT ON TABLE COMPANY IS '회사 테이블입니다';
COMMENT ON COLUMN COMPANY.C_KEY IS '회사기본키';
COMMENT ON COLUMN COMPANY.C_NAME IS '회사명';
COMMENT ON COLUMN COMPANY.C_OWNER IS '회사대표명';
COMMENT ON COLUMN COMPANY.C_ADDRESS IS '회사주소';
COMMENT ON COLUMN COMPANY.C_LOGO IS '회사로고';
COMMENT ON COLUMN COMPANY.C_SIGN IS '회사도장';
COMMENT ON COLUMN COMPANY.C_QRCODE IS 'QR코드ID';
COMMENT ON COLUMN COMPANY.C_MILEAGE IS '마일리지';
COMMENT ON COLUMN COMPANY.C_CLOSEDAY IS '서비스종료일';
COMMENT ON COLUMN COMPANY.C_LEVEL IS '회사등급';
--회사테이블 제약조건
ALTER TABLE COMPANY ADD(FOREIGN KEY (COORD_KEY_FK) REFERENCES COORDINATE (COORD_KEY));

--구분정보테이블
CREATE TABLE DIVISION(
 DIV_KEY NUMBER PRIMARY KEY,
 C_KEY_FK NUMBER,
 DIV_TYPE NUMBER,
 DIV_INFO VARCHAR2(300 BYTE),
 DIV_INFOLEVEL NUMBER
);
--구분정보테이블 제약조건
ALTER TABLE DIVISION ADD(FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
--구분정보테이블 코멘트
COMMENT ON TABLE DIVISION IS '구분정보 테이블입니다';
COMMENT ON COLUMN DIVISION.DIV_KEY IS '구분기본키';
COMMENT ON COLUMN DIVISION.C_KEY_FK IS '회사키';
COMMENT ON COLUMN DIVISION.DIV_TYPE IS '구분분류';--1:부서 2:직급 3:문서폼
COMMENT ON COLUMN DIVISION.DIV_INFO IS '타입별 정보';
COMMENT ON COLUMN DIVISION.DIV_INFOLEVEL IS '직급레벨';

--사원테이블
CREATE TABLE EMPLOYEE(
    E_KEY NUMBER PRIMARY KEY,
    E_NO VARCHAR2(100),
    C_KEY_FK NUMBER,
    E_TYPE CHAR(1 BYTE),
    E_ID VARCHAR2(300),
    E_PWD VARCHAR2(300),
    E_NAME VARCHAR2(30),
    E_JOBCODE_FK  NUMBER,
    E_DEPART_FK NUMBER,
    E_ADDRESS VARCHAR2(300),
    E_EXTEN VARCHAR2(14),
    E_PHONE VARCHAR2(13),
    E_EMAIL VARCHAR2(100),
    E_BIRTH DATE,
    E_HIRE_DATE DATE,
    E_ENT_DATE DATE,
    E_ENT_YN CHAR(1 BYTE) DEFAULT 'N',
    E_PHOTO VARCHAR2(100),
    E_INSTEAD NUMBER,
    E_STATE NUMBER DEFAULT 1
);
--사원테이블 제약조건
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY) ON DELETE CASCADE);
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_JOBCODE_FK) REFERENCES DIVISION (DIV_KEY));
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_DEPART_FK) REFERENCES DIVISION (DIV_KEY));
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_INSTEAD) REFERENCES EMPLOYEE (E_KEY));
--사원테이블 코멘트
COMMENT ON TABLE EMPLOYEE IS '사원 테이블입니다';
COMMENT ON COLUMN EMPLOYEE.E_KEY IS '사원기본키';
COMMENT ON COLUMN EMPLOYEE.E_NO IS '사번';
COMMENT ON COLUMN EMPLOYEE.C_KEY_FK IS '회사기본키';
COMMENT ON COLUMN EMPLOYEE.E_TYPE IS '관리자,사원 구분';
COMMENT ON COLUMN EMPLOYEE.E_ID IS '사원아이디';
COMMENT ON COLUMN EMPLOYEE.E_PWD IS '사원패스워드';
COMMENT ON COLUMN EMPLOYEE.E_NAME IS '사원이름';
COMMENT ON COLUMN EMPLOYEE.E_JOBCODE_FK IS '직급';
COMMENT ON COLUMN EMPLOYEE.E_DEPART_FK IS '부서명';
COMMENT ON COLUMN EMPLOYEE.E_ADDRESS IS '사원주소';
COMMENT ON COLUMN EMPLOYEE.E_EXTEN IS '내선번호';
COMMENT ON COLUMN EMPLOYEE.E_PHONE IS '휴대폰번호';
COMMENT ON COLUMN EMPLOYEE.E_EMAIL IS '사원이메일';
COMMENT ON COLUMN EMPLOYEE.E_BIRTH IS '생년월일';
COMMENT ON COLUMN EMPLOYEE.E_HIRE_DATE IS '사원입사일';
COMMENT ON COLUMN EMPLOYEE.E_ENT_DATE IS '사원퇴사일';
COMMENT ON COLUMN EMPLOYEE.E_ENT_YN IS '사원퇴사유무';
COMMENT ON COLUMN EMPLOYEE.E_PHOTO IS '사원사진';
COMMENT ON COLUMN EMPLOYEE.E_INSTEAD IS '대결자';
COMMENT ON COLUMN EMPLOYEE.E_STATE IS '자리비움여부'; --0:자리비움 1:존재함

--업무보고테이블
CREATE TABLE REPORT(
 REP_KEY NUMBER PRIMARY KEY,
 C_KEY_FK NUMBER,
 REP_TITLE VARCHAR2(300 BYTE),
 REP_CONTENT VARCHAR2(300 BYTE),
 REP_WRITER_FK NUMBER,
 REP_DATE DATE
);
--업무보고테이블 제약조건
ALTER TABLE REPORT ADD(FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY(C_KEY));
ALTER TABLE REPORT ADD(FOREIGN KEY (REP_WRITER_FK) REFERENCES EMPLOYEE (E_KEY));
--업무보고테이블 코멘트
COMMENT ON TABLE REPORT IS '업무보고 테이블입니다';
COMMENT ON COLUMN REPORT.REP_KEY IS '업무보고 기본키';
COMMENT ON COLUMN REPORT.C_KEY_FK IS '회사키';
COMMENT ON COLUMN REPORT.REP_TITLE IS '보고서 제목';
COMMENT ON COLUMN REPORT.REP_CONTENT IS '보고내용';
COMMENT ON COLUMN REPORT.REP_WRITER_FK IS '작성자';
COMMENT ON COLUMN REPORT.REP_DATE IS '작성일';
---------------------------------------------------------------------전유민
--문의사항 테이블
CREATE TABLE QNA(
Q_KEY NUMBER PRIMARY KEY,
Q_WRITER_FK NUMBER,
Q_TITLE VARCHAR2(4000),
Q_CONTENT VARCHAR2(4000),
Q_ANSWER VARCHAR2(4000),
Q_DATE DATE DEFAULT SYSDATE,
Q_END_DATE DATE,
Q_CHECK CHAR(1 BYTE) DEFAULT 'N'
);
--문의사항테이블 제약조건
ALTER TABLE QNA ADD(FOREIGN KEY (Q_WRITER_FK) REFERENCES COMPANY (C_KEY));
--문의사항테이블 코멘트
COMMENT ON TABLE QNA IS '문의사항 테이블 입니다.';
COMMENT ON COLUMN QNA.Q_KEY IS '문의사항 기본키';
COMMENT ON COLUMN QNA.Q_WRITER_FK IS '작성자(회사기본키)';
COMMENT ON COLUMN QNA.Q_TITLE IS '제목';
COMMENT ON COLUMN QNA.Q_CONTENT IS '질문내용';
COMMENT ON COLUMN QNA.Q_ANSWER IS '답변내용';
COMMENT ON COLUMN QNA.Q_DATE IS '작성일';
COMMENT ON COLUMN QNA.Q_END_DATE IS '일';
COMMENT ON COLUMN QNA.Q_CHECK IS '답변여부';


--결제테이블
CREATE TABLE PAYMENT(
PAY_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
PAY_MILEAGE VARCHAR2(300),
PAY_DATE DATE DEFAULT SYSDATE,
PAY_VOUCHER NUMBER
);
--결제테이블 제약조건
ALTER TABLE PAYMENT ADD(FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY(C_KEY));
--결제테이블코멘트
COMMENT ON TABLE PAYMENT IS '결제 테이블 입니다.';
COMMENT ON COLUMN PAYMENT.PAY_KEY IS '결제 기본키';
COMMENT ON COLUMN PAYMENT.C_KEY_FK IS '회사 기본키';
COMMENT ON COLUMN PAYMENT.PAY_MILEAGE IS '마일리지';
COMMENT ON COLUMN PAYMENT.PAY_DATE IS '결제일';
COMMENT ON COLUMN PAYMENT.PAY_VOUCHER IS '이용권';

--금액테이블
CREATE TABLE PRICE(
P_LEVEL NUMBER PRIMARY KEY,
P_EMPLOYEES NUMBER,
P_PRICE NUMBER
);
--금액테이블 코멘트
COMMENT ON TABLE PRICE IS '금액 테이블 입니다.';
COMMENT ON COLUMN PRICE.P_LEVEL IS '레벨';
COMMENT ON COLUMN PRICE.P_EMPLOYEES IS '사원수';
COMMENT ON COLUMN PRICE.P_PRICE IS '사원당 금액';
--금액테이블 기준정보
INSERT INTO PRICE VALUES(1,100, 7000);
INSERT INTO PRICE VALUES(2,200, 6000);
INSERT INTO PRICE VALUES(3,300, 5000);

---------------------------------------------------------------------이원준
--게시판 테이블
CREATE TABLE BOARD(
B_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
B_TITLE VARCHAR2(1000),
B_CONTENT CLOB,
B_WRITER_FK NUMBER,
B_COUNT NUMBER,
B_DATE DATE DEFAULT SYSDATE,
B_CATEGORY VARCHAR2(1000)
);
--게시판테이블 제약조건
ALTER TABLE BOARD ADD(FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY(C_KEY));
ALTER TABLE BOARD ADD(FOREIGN KEY (B_WRITER_FK) REFERENCES EMPLOYEE (E_KEY));
--게시글 테이블 코멘트
COMMENT ON TABLE BOARD IS '게시판 테이블입니다';
COMMENT ON COLUMN BOARD.B_KEY IS '게시판 기본키';
COMMENT ON COLUMN BOARD.C_KEY_FK IS '회사 기본키';
COMMENT ON COLUMN BOARD.B_TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.B_CONTENT IS '글내용';
COMMENT ON COLUMN BOARD.B_WRITER_FK IS '작성자(사원기본키)';
COMMENT ON COLUMN BOARD.B_COUNT IS '조회수';
COMMENT ON COLUMN BOARD.B_DATE IS '작성일';
COMMENT ON COLUMN BOARD.B_CATEGORY IS '게시판 종류';

--댓글 테이블
CREATE TABLE BOARD_COMMENT(
CO_KEY NUMBER PRIMARY KEY,
B_KEY_FK NUMBER,
CO_WRITER_FK NUMBER,
CO_CONTENT VARCHAR2(4000),
CO_DATE DATE DEFAULT SYSDATE
);
--댓글테이블 제약조건
ALTER TABLE BOARD_COMMENT ADD(FOREIGN KEY (B_KEY_FK) REFERENCES BOARD(B_KEY) ON DELETE CASCADE);
ALTER TABLE BOARD_COMMENT ADD(FOREIGN KEY (CO_WRITER_FK) REFERENCES EMPLOYEE (E_KEY));
--댓글테이블 코멘트
COMMENT ON TABLE BOARD_COMMENT IS '댓글 테이블입니다';
COMMENT ON COLUMN BOARD_COMMENT.CO_KEY IS '댓글 기본키';
COMMENT ON COLUMN BOARD_COMMENT.B_KEY_FK IS '게시글번호(게시글기본키)';
COMMENT ON COLUMN BOARD_COMMENT.CO_WRITER_FK IS '작성자(사원기본키)';
COMMENT ON COLUMN BOARD_COMMENT.CO_CONTENT IS '내용';
COMMENT ON COLUMN BOARD_COMMENT.CO_DATE IS '작성일';

---------------------------------------------------------------------김기영
--일정관리테이블
CREATE TABLE CALENDER(
CAL_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
CAL_NAME VARCHAR2(300) ,
CAL_STARTDATE DATE,
CAL_ENDDATE DATE ,
CAL_TYPE NUMBER ,
CAL_COMTYPE VARCHAR2(300),
BACKGROUND VARCHAR2(25)
);
--일정관리테이블 제약조건
ALTER TABLE CALENDER ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
--일정관리테이블 코멘트
COMMENT ON TABLE CALENDER IS '일정테이블 입니다.';
COMMENT ON COLUMN CALENDER.CAL_KEY IS '일정번호';
COMMENT ON COLUMN CALENDER.C_KEY_FK IS '회사키(외래키)';
COMMENT ON COLUMN CALENDER.CAL_NAME IS '일정이름';
COMMENT ON COLUMN CALENDER.CAL_STARTDATE IS '일정시작시간';
COMMENT ON COLUMN CALENDER.CAL_ENDDATE IS '일정종료시간';
COMMENT ON COLUMN CALENDER.CAL_TYPE IS '일정종류';
COMMENT ON COLUMN CALENDER.CAL_COMTYPE IS '일정 대상자정보';

--근태관리테이블
CREATE TABLE COMMUTE(
COMM_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER ,
E_KEY_FK NUMBER ,
COMM_DATE DATE ,
COMM_INTIME DATE ,
COMM_OUTTIME DATE
);
--근태관리테이블 제약조건
ALTER TABLE COMMUTE ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
ALTER TABLE COMMUTE ADD (FOREIGN KEY (E_KEY_FK) REFERENCES EMPLOYEE (E_KEY));
--근태관리테이블 코멘트
COMMENT ON TABLE COMMUTE IS '근태관리테이블 입니다.';
COMMENT ON COLUMN COMMUTE.COMM_KEY IS '근태넘버';
COMMENT ON COLUMN COMMUTE.C_KEY_FK IS '회사키(외래키)';
COMMENT ON COLUMN COMMUTE.E_KEY_FK IS '사원키(외래키)';
COMMENT ON COLUMN COMMUTE.COMM_DATE IS '출근날짜';
COMMENT ON COLUMN COMMUTE.COMM_INTIME IS '출근시간';
COMMENT ON COLUMN COMMUTE.COMM_OUTTIME IS '퇴근시간';

--휴가테이블
CREATE TABLE VACATION(
V_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
E_KEY_FK NUMBER NOT NULL,
V_USEDDATE NUMBER NOT NULL,
V_STARTDATE DATE,
V_RECALLDATE DATE
);
--휴가테이블 제약조건
ALTER TABLE VACATION ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
ALTER TABLE VACATION ADD (FOREIGN KEY (E_KEY_FK) REFERENCES EMPLOYEE (E_KEY));
--휴가테이블 코멘트
COMMENT ON TABLE VACATION IS '휴가테이블 입니다.';
COMMENT ON COLUMN VACATION.V_KEY IS '휴가키';
COMMENT ON COLUMN VACATION.C_KEY_FK IS '회사키(외래키)';
COMMENT ON COLUMN VACATION.E_KEY_FK IS '사원키(외래키)';
COMMENT ON COLUMN VACATION.V_USEDDATE IS '사용일수';
COMMENT ON COLUMN VACATION.V_STARTDATE IS '시작일';
COMMENT ON COLUMN VACATION.V_RECALLDATE IS '종료일';

--휴가지급테이블
CREATE TABLE GIVEVACATION(
GV_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
GV_YEAR NUMBER NOT NULL, 
GV_VACADATE NUMBER NOT NULL,
GV_DATE DATE NOT NULL 
);
--휴가지급테이블 제약조건
ALTER TABLE GIVEVACATION ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
--휴가지금테이블 코멘트
COMMENT ON TABLE GIVEVACATION IS '휴가지급테이블 입니다.';
COMMENT ON COLUMN GIVEVACATION.C_KEY_FK IS '회사키';
COMMENT ON COLUMN GIVEVACATION.GV_YEAR IS '근속년수';
COMMENT ON COLUMN GIVEVACATION.GV_VACADATE IS '지급일수';
COMMENT ON COLUMN GIVEVACATION.GV_DATE IS '휴가지급날짜';

---------------------------------------------------------------------이유림
--전자결재테이블
CREATE TABLE APPROVAL(
A_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
DIV_DOCTYPE_FK NUMBER,
A_TITLE VARCHAR2(300),
A_CONTENT VARCHAR2(300),
A_WRITER_FK NUMBER,
A_WRITE_DATE DATE,
A_COMPLETE_DATE DATE,
A_CONDITION NUMBER CHECK (A_CONDITION BETWEEN 0 AND 2)
);
--전자결재테이블 제약조건
ALTER TABLE APPROVAL ADD (FOREIGN KEY (A_WRITER_FK) REFERENCES EMPLOYEE (E_KEY));
ALTER TABLE APPROVAL ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));
ALTER TABLE APPROVAL ADD (FOREIGN KEY (DIV_DOCTYPE_FK) REFERENCES DIVISION (DIV_KEY));
--전자결재테이블 코멘트
COMMENT ON TABLE APPROVAL IS '전자결재테이블';
COMMENT ON COLUMN APPROVAL.A_KEY IS '전자결재 기본키';
COMMENT ON COLUMN APPROVAL.C_KEY_FK IS '회사키';
COMMENT ON COLUMN APPROVAL.DIV_DOCTYPE_FK IS '결재문서 타입(구분정보키)';
COMMENT ON COLUMN APPROVAL.A_TITLE IS '결재문서 제목';
COMMENT ON COLUMN APPROVAL.A_CONTENT IS '결재문서 내용';
COMMENT ON COLUMN APPROVAL.A_WRITER_FK IS '결재문서 작성자(사원키)';
COMMENT ON COLUMN APPROVAL.A_WRITE_DATE IS '결재문서 작성일';
COMMENT ON COLUMN APPROVAL.A_COMPLETE_DATE IS '결재 완료일';
COMMENT ON COLUMN APPROVAL.A_CONDITION IS '결재문서 상태(결재중/반려/완료)';

--전자결재상태테이블
CREATE TABLE APPROVAL_CONDITION(
AC_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
AC_APPROVER_FK NUMBER,
AC_CONDITION NUMBER,
AC_APPROVAL_TYPE VARCHAR2(20),
AC_APPROVAL_DATE DATE
);
--전자결재상테테이블 제약조건
ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));
ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (AC_APPROVER_FK) REFERENCES EMPLOYEE (E_KEY));
--전자결재상테테이블 코멘트
COMMENT ON TABLE APPROVAL_CONDITION IS '전자결재상태테이블';
COMMENT ON COLUMN APPROVAL_CONDITION.AC_KEY IS '전자결재상태 기본키';
COMMENT ON COLUMN APPROVAL_CONDITION.A_KEY_FK IS '전자결재문서의 기본키';
COMMENT ON COLUMN APPROVAL_CONDITION.AC_APPROVER_FK IS '결재자(사원키)';
COMMENT ON COLUMN APPROVAL_CONDITION.AC_CONDITION IS '결재상태';
COMMENT ON COLUMN APPROVAL_CONDITION.AC_APPROVAL_TYPE IS '결재비고';
COMMENT ON COLUMN APPROVAL_CONDITION.AC_APPROVAL_DATE IS '결재일';

--첨부파일테이블
CREATE TABLE ATTACHMENT (
ATTA_KEY NUMBER PRIMARY KEY,
ATTA_LOCATION NUMBER,
ATTA_FILENAME VARCHAR2(300),
ATTA_FILEPATH VARCHAR2(1000),
ATTA_FILESIZE VARCHAR2(100)
);
--첨부파일테이블 코멘트
COMMENT ON TABLE ATTACHMENT IS '첨부파일테이블';
COMMENT ON COLUMN ATTACHMENT.ATTA_KEY IS '첨부파일 기본키';
COMMENT ON COLUMN ATTACHMENT.ATTA_LOCATION IS '첨부된 위치';
COMMENT ON COLUMN ATTACHMENT.ATTA_FILENAME IS '첨부파일이름';
COMMENT ON COLUMN ATTACHMENT.ATTA_FILEPATH IS '첨부파일경로';
COMMENT ON COLUMN ATTACHMENT.ATTA_FILESIZE IS '첨부파일';

--보낸쪽지 테이블
CREATE TABLE SENDNOTE(
    SN_KEY NUMBER PRIMARY KEY,
    SN_SENDER_FK NUMBER,
    SN_TITLE VARCHAR2(4000),
    SN_CONTENT CLOB,
    SN_WRITE_DATE DATE,
    SN_DELETE_YN CHAR(1) DEFAULT 'N',
    SN_ATTACH_YN CHAR(1)
);
--보낸쪽지테이블 제약조건
ALTER TABLE SENDNOTE ADD(FOREIGN KEY(SN_SENDER_FK) REFERENCES EMPLOYEE (E_KEY));
--보낸쪽지테이블 코멘트
COMMENT ON TABLE SENDNOTE IS '보낸쪽지';
COMMENT ON COLUMN SENDNOTE.SN_KEY IS '보낸쪽지기본키';
COMMENT ON COLUMN SENDNOTE.SN_SENDER_FK IS '보낸사람(사원키)';
COMMENT ON COLUMN SENDNOTE.SN_TITLE IS '쪽지제목';
COMMENT ON COLUMN SENDNOTE.SN_CONTENT IS '쪽지내용';
COMMENT ON COLUMN SENDNOTE.SN_WRITE_DATE IS '쪽지보낸일';
COMMENT ON COLUMN SENDNOTE.SN_DELETE_YN IS '송신자쪽지삭제여부';

--쪽지받는사람 테이블
CREATE TABLE RECEIVENOTE(
    RN_KEY NUMBER PRIMARY KEY,
    RN_NOTE_FK NUMBER,
    RN_RECIPIENT_FK NUMBER,
    RN_READ_YN CHAR(1) DEFAULT 'N',
    RN_DELETE_YN CHAR(1) DEFAULT 'N'
);
--쪽지받는사람테이블 제약조건
ALTER TABLE RECEIVENOTE ADD(FOREIGN KEY(RN_NOTE_FK) REFERENCES SENDNOTE (SN_KEY));
ALTER TABLE RECEIVENOTE ADD (FOREIGN KEY(RN_RECIPIENT_FK) REFERENCES EMPLOYEE (E_KEY));
--쪽지받는사람테이블 코멘트
COMMENT ON TABLE RECEIVENOTE IS '수신자';
COMMENT ON COLUMN RECEIVENOTE.RN_KEY IS '수신자테이블 기본키';
COMMENT ON COLUMN RECEIVENOTE.RN_NOTE_FK IS '쪽지의 기본키';
COMMENT ON COLUMN RECEIVENOTE.RN_RECIPIENT_FK IS '받는사람(사원키)';
COMMENT ON COLUMN RECEIVENOTE.RN_READ_YN IS '읽음여부';
COMMENT ON COLUMN RECEIVENOTE.RN_DELETE_YN IS '삭제여부';


---------------------------------------------------------------결재문서폼
CREATE TABLE ORDERTABLE(
O_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
O_DEPARTMENT VARCHAR2(100),
O_LIMIT DATE,
O_NO NUMBER,
O_DATE DATE,
O_PAYMENT VARCHAR2(100),
O_STARTDATE DATE,
O_ENDDATE DATE,
O_PAYEND DATE,
O_PURPOSE VARCHAR2(100)
);

ALTER TABLE ORDERTABLE ADD(FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));

-------여기까지가 상단 양식이고 이아래론 품목에관한양식
CREATE TABLE ORDERTABLELINKED(
OL_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
OL_CULNO NUMBER,
OL_PRODUCT VARCHAR2(100),
OL_SIZE VARCHAR2(100),
OL_UNION VARCHAR2(100),
OL_PRODUCTCOUNT NUMBER,
OL_ORIZINPRICE NUMBER,
OL_PRICE NUMBER,
OL_ETC VARCHAR2(100)
);

ALTER TABLE ORDERTABLELINKED ADD(FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));

COMMENT ON TABLE ORDERTABLE IS '발주서 테이블입니다';
COMMENT ON COLUMN ORDERTABLE.O_KEY IS '발주서 기본키';
COMMENT ON COLUMN ORDERTABLE.A_KEY_FK IS '결재테이블 외래키';
COMMENT ON COLUMN ORDERTABLE.O_DEPARTMENT IS '구매요청부서';
COMMENT ON COLUMN ORDERTABLE.O_LIMIT IS '남품요청기한';
COMMENT ON COLUMN ORDERTABLE.O_NO IS '발주번호';
COMMENT ON COLUMN ORDERTABLE.O_DATE IS '발주일지';
COMMENT ON COLUMN ORDERTABLE.O_PAYMENT IS '대금지불방법';
COMMENT ON COLUMN ORDERTABLE.O_STARTDATE IS '납품기한(시작일)';
COMMENT ON COLUMN ORDERTABLE.O_ENDDATE IS '납품기한(종료일)';
COMMENT ON COLUMN ORDERTABLE.O_PAYEND IS '완납일자';
COMMENT ON COLUMN ORDERTABLE.O_PURPOSE IS '사용목적';

COMMENT ON TABLE ORDERTABLELINKED IS '발주상품 테이블입니다';
COMMENT ON COLUMN ORDERTABLELINKED.OL_KEY IS '발주상품 기본키';
COMMENT ON COLUMN ORDERTABLELINKED.A_KEY_FK IS '결재테이블 외래키';
COMMENT ON COLUMN ORDERTABLELINKED.OL_CULNO IS '품번';
COMMENT ON COLUMN ORDERTABLELINKED.OL_PRODUCT IS '품명';
COMMENT ON COLUMN ORDERTABLELINKED.OL_SIZE IS '규격';
COMMENT ON COLUMN ORDERTABLELINKED.OL_UNION IS '단위';
COMMENT ON COLUMN ORDERTABLELINKED.OL_PRODUCTCOUNT IS '수량';
COMMENT ON COLUMN ORDERTABLELINKED.OL_ORIZINPRICE IS '단가';
COMMENT ON COLUMN ORDERTABLELINKED.OL_PRICE IS '금액';
COMMENT ON COLUMN ORDERTABLELINKED.OL_ETC IS '비고';

CREATE TABLE VACATION_FORM (
VF_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
VF_TYPE VARCHAR2(100),
VF_STARTDATE DATE,
VF_ENDDATE DATE,
VF_HALFFLAG NUMBER,
VF_REASON VARCHAR2(1000)
);

ALTER TABLE VACATION_FORM ADD(FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));

COMMENT ON COLUMN VACATION_FORM.VF_KEY IS '기본키';
COMMENT ON COLUMN VACATION_FORM.A_KEY_FK IS '결재 외래키';
COMMENT ON COLUMN VACATION_FORM.VF_TYPE IS '휴가종류';
COMMENT ON COLUMN VACATION_FORM.VF_STARTDATE IS '휴가시작일';
COMMENT ON COLUMN VACATION_FORM.VF_ENDDATE IS '휴가종료일';
COMMENT ON COLUMN VACATION_FORM.VF_HALFFLAG IS '반차유무';
COMMENT ON COLUMN VACATION_FORM.VF_REASON IS '휴가사유';

CREATE TABLE JOB_PROPSAL(
    JP_KEY NUMBER PRIMARY KEY,
    A_KEY_FK NUMBER,
    JP_WORKING_DATE DATE,
    JP_COOPERATION VARCHAR2(100)
);

ALTER TABLE JOB_PROPSAL ADD(FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));

COMMENT ON COLUMN JOB_PROPSAL.JP_KEY IS '기본키';
COMMENT ON COLUMN JOB_PROPSAL.A_KEY_FK IS '결재외래키';
COMMENT ON COLUMN JOB_PROPSAL.JP_WORKING_DATE IS '시행일자';
COMMENT ON COLUMN JOB_PROPSAL.JP_COOPERATION IS '협조부서';

--지출결의서 테이블
CREATE TABLE SPENDING_RESOLUTION(
RS_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
RS_DATE DATE,
RS_TYPE VARCHAR2(100),
RS_MONEY VARCHAR2(100),
RS_CONTENT VARCHAR2(600),
RS_NOTE VARCHAR2(600)
);
--지출결의서 테이블 제약조건
ALTER TABLE SPENDING_RESOLUTION ADD(FOREIGN KEY(A_KEY_FK) REFERENCES APPROVAL(A_KEY));

--지출결의서 테이블 코멘트
COMMENT ON TABLE SPENDING_RESOLUTION IS '지출결의서 테이블입니다.';
COMMENT ON COLUMN SPENDING_RESOLUTION.A_KEY_FK IS '전자결재키(외래키)';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_KEY IS '기본키';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_DATE IS '결제일';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_TYPE IS '결제내역 구분';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_MONEY IS '금액';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_CONTENT IS '결제내역';
COMMENT ON COLUMN SPENDING_RESOLUTION.RS_NOTE IS '비고';


